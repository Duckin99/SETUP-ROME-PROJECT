// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  username  String   @unique
  email     String   @unique
  password  String
  phone     String?
  location  String?
  createdAt DateTime @default(now())

  items          Item[]
  tradesSent     Trade[] @relation("TradeRequester") // Users who sent trade requests
  tradesReceived Trade[] @relation("TradeReceiver") // Users who received trade requests
}

model Item {
  id          Int      @id @default(autoincrement())
  title       String
  description String?
  category    String
  imageUrl    String?
  condition   String
  createdAt   DateTime @default(now())

  user   User @relation(fields: [userId], references: [id])
  userId Int

  tradesRequested Trade[] @relation("TradeRequesterItem")
  tradesReceived  Trade[] @relation("TradeReceiverItem")
}

model Trade {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())

  requester     User @relation("TradeRequester", fields: [requesterId], references: [id])
  receiver      User @relation("TradeReceiver", fields: [receiverId], references: [id])
  requesterItem Item @relation("TradeRequesterItem", fields: [requesterItemId], references: [id])
  receiverItem  Item @relation("TradeReceiverItem", fields: [receiverItemId], references: [id])

  requesterId     Int
  receiverId      Int
  requesterItemId Int
  receiverItemId  Int

  status String @default("pending")
}
